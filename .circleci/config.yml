# # ---
# v13.6.0....Node Version

# #   version: 2.0
# # jobs:
# #   build:
# #     docker:      
# #       - image: circleci/mysql:latest
# #     steps:
# #       - checkout
# #       - run:
# #           name: "Update Node.js and npm"
# #           command: |
# #             curl -sSL "https://nodejs.org/dist/v11.10.0/node-v11.10.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v11.10.0-linux-x64/bin/node
# #             curl https://www.npmjs.com/install.sh | sudo bash
# #       - run:
# #           name: Check current version of node
# #           command: node -v
# #   workflows:
# #   version: 2
# #  pr-check-workflow:
# #     jobs:
# #       -pr-check


#  #     ////
#       version: 2
# jobs:
#   pr-check:     
#   build: 
#     docker:
#       - image: circleci/python:2.7-jessie
#       - image: circleci/mysql:latest
#         command: [--default-authentication-plugin=mysql_native_password]
#         environment:
#           MYSQL_ROOT_PASSWORD: Master@123
#           MYSQL_DATABASE: mydb
#           MYSQL_USER: dbuser
#           MYSQL_PASSWORD: Master@123

#     steps:
#       - checkout
#       - run: 
#           name: "Setup custom environment variables"
#           command: |
#             echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV # Redirect MY_ENV_VAR into $BASH_ENV
#       # Run a step to print what branch our code base is on.

#       - run:
#           name: Install MySQL CLI; Import dummy data; run an example query
#           command: |
#             sudo apt-get install mysql-client
#             mysql -h 127.0.0.1 -u dbuser -pMaster123 --execute="SHOW DATABASES"
#       - run:
#           name: Install packages
#           command: sudo apt update && sudo apt install wget zip unzip python2.7 python-pip -y 
      
#       - run:
#           name: install--node
#           command: |
#             sudo apt-get install curl
#             curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -
#             sudo apt-get install nodejs
#             npm -v 
#       - run:
#           name: Build Artifact
#           command: |
#             ls -al
#             cd webapp
#             pwd
#             ls -al
#             npm install
#             sudo chown -R circleci /usr/lib/node_modules
#             sudo npm install -g mocha
#             mocha >> mocha.log &    
    
  

#       workflows:
#   version: 2
#  pr-check-workflow:
#     jobs:
#       -pr-check  
#   build-workflow: 
#       jobs:
#       filters:
#       branches:
#       only:
#       -master
---
version: 2
jobs:
  pr_check:
    docker:
    #  - image: circleci/python:2.7-jessie
       - image: circleci/node:13.6.0
    steps:
      - checkout # check out source code to working directory
      - run:
          name: Gradle build
          command: |
            echo "Hello World!"
  build:
    docker:
      - image: circleci/node:13.6.0
    steps:
      - checkout # check out source code to working directory
      - run: npm install
      - run: npm test
          
          
workflows:
  version: 2
  pr-check-workflow:
    jobs:
    - pr_check
 build-workflow:
    jobs:
    - build
      